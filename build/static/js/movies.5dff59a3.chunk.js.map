{"version":3,"sources":["components/Searchbar/Searchbar.js","services/getQueryParams.js","views/Movies/Movies.js","services/apiService.js","components/Loader/Loader.js","components/Loader/loader.module.css","components/Searchbar/search-form.module.css","views/Movies/movies.module.css"],"names":["SearchBar","state","value","handleChange","e","setState","target","handleSubmit","preventDefault","props","onSubmit","className","styles","container","SearchForm","noValidate","autoComplete","this","Button","type","onClick","handleGoBack","variant","color","TextField","SearchForm_input","id","name","placeholder","onChange","Component","getQueryParams","qs","queryString","parse","Movies","movies","loading","fetchMovies","query","fetchMovieSearch","then","onChangeQuery","history","push","location","search","input","console","log","from","prevProps","prevState","prevQuery","nextQuery","match","title","list","map","overview","list__item","key","link","to","pathname","url","apiKey","a","axios","get","res","data","results","fetchPopularMovies","fetchMoiveOverview","fetchMovieCast","cast","fetchMovieReviews","Spinner","classname","height","width","module","exports"],"mappings":"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","file":"static/js/movies.5dff59a3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"./search-form.module.css\";\n\nexport class SearchBar extends Component {\n  state = { value: \"\" };\n\n  handleChange = (e) => {\n    this.setState({ value: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.value);\n    this.setState({value: \"\" });\n  };\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <form\n          className={styles.SearchForm}\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={this.handleSubmit}\n        >\n          <Button\n            type=\"button\"\n            onClick={this.handleGoBack}\n            variant=\"contained\"\n            color=\"secondary\"\n          >\n            Search\n          </Button>\n\n          <TextField\n            className={styles.SearchForm_input}\n            id=\"standard-basic\"\n            type=\"text\"\n            name=\"query\"\n            value={this.state.value}\n            placeholder=\"Search\"\n            onChange={this.handleChange}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n","\n\nimport queryString from \"query-string\";\n\nexport default  function getQueryParams(qs) {\n    return queryString.parse(qs)\n}\n\n","import React, { Component } from \"react\";\nimport { SearchBar } from \"../../components/Searchbar/Searchbar\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./movies.module.css\";\nimport { fetchMovieSearch } from \"../../services/apiService\";\nimport getQueryParams from \"../../services/getQueryParams\";\nimport Spinner from \"../../components/Loader/Loader\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    loading: false,\n    value:null,\n  };\n\n  componentDidMount() {\n    const { query } = getQueryParams(this.props.location.search);\n    \n    if (query) {\n      this.fetchMovies(query);\n      // this.setState({ input: query })\n      console.log(this.props.location.search)\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const { query: prevQuery } = getQueryParams(prevProps.location.search);\n    const { query: nextQuery } = getQueryParams(this.props.location.search);\n    \n    if (prevQuery !== nextQuery) {\n      this.fetchMovies(nextQuery);\n    }\n  }\n\n  fetchMovies = (query) => {\n    fetchMovieSearch(query).then((movies) => this.setState({ movies }));\n  };\n\n  onChangeQuery = (query) => {\n \n    this.props.history.push({\n      ...this.props.location,\n      search: `query=${query}`,\n      \n    });\n  \n    this.setState({ input: \"sda\" })\n    console.log(this.state)\n  };\n\n  handleGoBack = () => {\n    const { state } = this.props.location;\n\n    if (state && state.from) {\n      this.props.history.push(state.from);\n    }\n  };\n\n  render() {\n    const { movies, loading } = this.state;\n    const { match } = this.props;\nconsole.log(getQueryParams(this.props.location.search));\n    return (\n      <div>\n        <h1 className={styles.title}>Поиск фильмов</h1>\n        <SearchBar onSubmit={this.onChangeQuery} />\n        {loading && <Spinner />}\n        {movies && (\n          <ul className={styles.list}>\n            {movies.map(({ id, title, overview, name }) => (\n              <li className={styles.list__item} key={id}>\n                <Link\n                  className={styles.link}\n                  to={{\n                    pathname: `${match.url}/${id}`,\n                    state: {\n                      from: this.props.location,\n                    search: this.props.location.search },\n                  }}\n                >\n                  {title || name}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import axios from \"axios\";\nconst apiKey = \"add96bc16de760017b7a79136a2ecf18\";\n\nexport const fetchMovieSearch = async (query) => {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const fetchPopularMovies = axios.get(\n  `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=1`\n);\n\nexport const fetchMoiveOverview = id => {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\n    )\n    .then((res) => res.data);\n};\n\nexport const fetchMovieCast = (id) => {\n  return axios\n    .get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`)\n    .then((res) => res.data.cast);\n};\n\nexport const fetchMovieReviews = (id) => {\n  return axios\n    .get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKey}`)\n    .then((res) => res.data.results);\n};\n","import React, { Component,} from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"./loader.module.css\";\nclass Spinner extends Component {\n  //other logic\n  render() {\n    return (\n      <>\n      <Loader\n        classname=\"loader\"\n        type=\"TailSpin\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        />\n        </>\n    );\n  }\n}\nexport default Spinner","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__3YnrM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"search-form_SearchForm__1NSlO\",\"container\":\"search-form_container__1xtKY\",\"SearchForm_input\":\"search-form_SearchForm_input__3fw-G\",\"Searchbar\":\"search-form_Searchbar__1gGB3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"movies_list__3q3n7\",\"list__item\":\"movies_list__item__1ImEJ\",\"link\":\"movies_link__1Na9H\",\"title\":\"movies_title__2Ef2O\"};"],"sourceRoot":""}