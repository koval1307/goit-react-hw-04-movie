{"version":3,"sources":["views/Cast/cast.module.css","views/movieOverview/movieOverview.module.css","views/Cast/Cast.js","views/reviews/reviews.js","views/movieOverview/MovieOverview.js","services/apiService.js","components/Loader/Loader.js","components/Loader/loader.module.css"],"names":["module","exports","Cast","state","cast","id","Number","this","props","match","params","fetchMovieCast","setState","className","styles","list","map","cast_id","character","name","profile_path","key","img","src","alt","Component","Reviews","reviews","fetchMovieReviews","length","author","content","OverView","loading","movieDetails","handleGoBack","location","from","history","push","routes","movies","fetchMoiveOverview","original_title","vote_average","genres","release_date","overview","poster_path","container","Button","button","type","onClick","variant","color","card","width","height","description","slice","el","list__item","to","pathname","url","queryHistory","path","component","apiKey","fetchMovieSearch","query","a","axios","get","res","data","results","fetchPopularMovies","then","Spinner","classname"],"mappings":"qIACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,IAAM,oB,oBCAlDD,EAAOC,QAAU,CAAC,KAAO,4BAA4B,UAAY,iCAAiC,KAAO,4BAA4B,YAAc,mCAAmC,WAAa,kCAAkC,IAAM,6B,uJCK9NC,EAAb,4MACEC,MAAQ,CACNC,KAAM,MAFV,2LAMUC,EAAKC,OAAOC,KAAKC,MAAMC,MAAMC,OAAOL,IAN9C,SAOuBM,YAAeN,GAPtC,OAOUD,EAPV,OASIG,KAAKK,SAAS,CAAER,KAAMA,IAT1B,qIAYY,IACAA,EAASG,KAAKJ,MAAdC,KAER,OACE,6BACE,oCACCA,GACC,wBAAIS,UAAWC,IAAOC,MACnBX,EAAKY,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACrC,OAAIA,EAEA,wBAAIC,IAAKJ,GACP,4BAAKE,GAEJC,GACC,yBACEP,UAAWC,IAAOQ,IAClBC,IAAG,yCAAoCH,GACvCI,IAAKL,IAGT,2BAAID,IAKR,wBAAIG,IAAKJ,GACP,4BAAKE,GAEL,yBACEN,UAAWC,IAAOQ,IAClBC,IACE,yDAEFC,IAAKL,IAGP,2BAAID,aAjDtB,GAA0BO,aCFbC,EAAb,4MACEvB,MAAQ,CACNwB,QAAS,IAFb,2LAKUtB,EAAKC,OAAOC,KAAKC,MAAMC,MAAMC,OAAOL,IAL9C,SAM0BuB,YAAkBvB,GAN5C,OAMUsB,EANV,OAOIpB,KAAKK,SAAS,CAAEe,QAASA,IAP7B,qIAWY,IACAA,EAAYpB,KAAKJ,MAAjBwB,QACN,OACE,4BACGA,EAAQE,OAAS,EAChBF,EAAQX,KAAI,YAA8B,IAA3BX,EAA0B,EAA1BA,GAAIyB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,wBAAIV,IAAKhB,GACP,gCAAMyB,GADR,IACqB,8BAAOC,OAKhC,8CAxBZ,GAA6BN,a,yDCQvBO,E,4MACJ7B,MAAQ,CACN8B,SAAS,EACTC,aAAc,M,EAUhBC,aAAe,WAAO,IAAShC,EAAU,EAAKK,MAAM4B,SAArBjC,MAE/B,GAAIA,GAASA,EAAMkC,KACjB,OAAO,EAAK7B,MAAM8B,QAAQC,KAAKpC,EAAMkC,MAEvC,EAAK7B,MAAM8B,QAAQC,KAAKC,IAAOC,S,2LAXvBpC,EAAKC,OAAOC,KAAKC,MAAMC,MAAMC,OAAOL,I,SAEfqC,YAAmBrC,G,OAAxC6B,E,OAEN3B,KAAKK,SAAL,eAAmBsB,I,qIASX,IAAD,EASH3B,KAAKJ,MAPPwC,EAFK,EAELA,eACAC,EAHK,EAGLA,aACAC,EAJK,EAILA,OACAC,EALK,EAKLA,aACAC,EANK,EAMLA,SACAC,EAPK,EAOLA,YACAf,EARK,EAQLA,QAGF,OACE,yBAAKpB,UAAWC,IAAOmC,WACrB,kBAACC,EAAA,EAAD,CACErC,UAAWC,IAAOqC,OAClBC,KAAK,SACLC,QAAS9C,KAAK4B,aACdmB,QAAQ,YACRC,MAAM,aALR,WASCtB,GAAW,kBAAC,IAAD,MACZ,yBAAKpB,UAAWC,IAAO0C,MACpBR,EACC,yBACES,MAAM,MACNC,OAAO,MACPnC,IAAG,0CAAqCyB,GACxCxB,IAAG,UAAKmB,KAGV,yBACEc,MAAM,MACNC,OAAO,MACPnC,IAAK,kCACLC,IAAG,UAAKmB,KAIZ,yBAAK9B,UAAWC,IAAO6C,aACrB,4BAAKhB,GACL,2BAAIC,GAAY,qBAAiC,GAAfA,EAAlB,OAChB,2BAAIE,GAAY,wBAAqBA,EAAac,MAAM,EAAG,KAC3D,qCACS,IACP,4BACGf,GAAUA,EAAO7B,KAAI,SAAC6C,GAAD,OAAQ,wBAAIxC,IAAKwC,EAAGxD,IAAKwD,EAAG1C,WAGtD,2BAAI4B,KAGR,wBAAIlC,UAAWC,IAAOC,MACpB,wBAAIF,UAAWC,IAAOgD,YACpB,kBAAC,IAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAKzD,KAAKC,MAAMC,MAAMwD,IAAtB,SACR9D,MAAO,CAAEkC,KAAM9B,KAAKJ,MAAM+D,gBAH9B,UASF,wBAAIrD,UAAWC,IAAOgD,YACpB,kBAAC,IAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAKzD,KAAKC,MAAMC,MAAMwD,IAAtB,YACR9D,MAAO,CAAEkC,KAAM9B,KAAKJ,MAAM+D,gBAH9B,aAUJ,kBAAC,IAAD,CAAOC,KAAI,UAAK5D,KAAKC,MAAMC,MAAM0D,KAAtB,SAAmCC,UAAWlE,IACzD,kBAAC,IAAD,CAAOiE,KAAI,UAAK5D,KAAKC,MAAMC,MAAM0D,KAAtB,YAAsCC,UAAW1C,S,GAhG7CD,aAqGRO,a,wPChHTqC,EAAS,mCAEFC,EAAgB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACZC,IAAMC,IAAN,4DACqCL,EADrC,kBACqDE,EADrD,+CADY,cACxBI,EADwB,yBAIvBA,EAAIC,KAAKC,SAJc,2CAAH,sDAOhBC,EAAqBL,IAAMC,IAAN,6DACsBL,EADtB,2BAIrB3B,EAAoB,SAAArC,GAC9B,OAAOoE,IACHC,IADG,6CAEoCrE,EAFpC,oBAEkDgE,EAFlD,oBAIHU,MAAK,SAACJ,GAAD,OAASA,EAAIC,SAIZjE,EAAiB,SAAAN,GAC1B,OAAOoE,IACJC,IADI,6CACsCrE,EADtC,4BAC4DgE,IAChEU,MAAK,SAACJ,GAAD,OAASA,EAAIC,KAAKxE,SAGjBwB,EAAoB,SAAAvB,GAC7B,OAAOoE,IAAMC,IAAN,6CACiCrE,EADjC,4BACuDgE,IAC5DU,MAAK,SAACJ,GAAD,OAASA,EAAIC,KAAKC,a,qGC7BvBG,G,6KAGF,OACE,oCACA,kBAAC,IAAD,CACEC,UAAU,SACV7B,KAAK,WACLG,MAAM,UACNG,OAAQ,IACRD,MAAO,W,GAVOhC,cAgBPuD,O,mBClBfhF,EAAOC,QAAU,CAAC,OAAS","file":"static/js/overView.9f1711ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"cast_list__21-2f\",\"img\":\"cast_img__S_Zds\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"movieOverview_list__16GSi\",\"container\":\"movieOverview_container__3k6wT\",\"card\":\"movieOverview_card__3bX5A\",\"description\":\"movieOverview_description__6FFOa\",\"list__item\":\"movieOverview_list__item__1kQr3\",\"img\":\"movieOverview_img__3W-ZK\"};","import React, { Component } from \"react\";\nimport styles from \"./cast.module.css\";\nimport { fetchMovieCast } from \"../../services/apiService\";\n\n\n\nexport class Cast extends Component {\n  state = {\n    cast: null,\n  };\n\n  async componentDidMount() {\n    const id = Number(this.props.match.params.id);\n    const cast = await fetchMovieCast(id)\n\n    this.setState({ cast: cast });\n  }\n\n  render() {\n    const { cast } = this.state;\n    \n    return (\n      <div>\n        <h2>Cast</h2>\n        {cast && (\n          <ul className={styles.list}>\n            {cast.map(({ cast_id, character, name, profile_path }) => {\n              if (profile_path) {\n                return (\n                  <li key={cast_id}>\n                    <h2>{name}</h2>\n\n                    {profile_path && (\n                      <img\n                        className={styles.img}\n                        src={`https://image.tmdb.org/t/p/w300${profile_path}`}\n                        alt={name}\n                      ></img>\n                    )}\n                    <p>{character}</p>\n                  </li>\n                );\n              }\n              return (\n                <li key={cast_id}>\n                  <h2>{name}</h2>\n\n                  <img\n                    className={styles.img}\n                    src={\n                      \"https://pbs.twimg.com/profile_images/1407346896/89.jpg\"\n                    }\n                    alt={name}\n                  ></img>\n\n                  <p>{character}</p>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {fetchMovieReviews} from \"../../services/apiService\"\n\n\nexport class Reviews extends Component {\n  state = {\n    reviews: [],\n  };\n  async componentDidMount() {\n    const id = Number(this.props.match.params.id);\n    const reviews = await fetchMovieReviews(id)\n    this.setState({ reviews: reviews  });\n \n  }\n\n  render() {\n    const { reviews } = this.state;\n      return (\n        <ul>\n          {reviews.length > 0 ? (\n            reviews.map(({ id, author, content }) => {\n              return (\n                <li key={id}>\n                  <h2> {author}</h2> <span>{content}</span>\n                </li>\n              );\n            })\n          ) : (\n            <p>No Reviews</p>\n          )}\n        </ul>\n      );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Cast } from \"../Cast/Cast\";\nimport { Reviews } from \"../reviews/reviews\";\n\nimport { Route, Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"./movieOverview.module.css\";\n\nimport routes from \"../../services/routes\";\nimport Spinner from \"../../components/Loader/Loader\";\nimport { fetchMoiveOverview } from \"../../services/apiService\";\n\nclass OverView extends Component {\n  state = {\n    loading: false,\n    movieDetails: null,\n  };\n\n  async componentDidMount() {\n    const id = Number(this.props.match.params.id);\n\n    const movieDetails = await fetchMoiveOverview(id);\n\n    this.setState({ ...movieDetails });\n  }\n  handleGoBack = () => { const { state } = this.props.location;\n\n  if (state && state.from) {\n    return this.props.history.push(state.from);\n  }\n  this.props.history.push(routes.movies);\n  };\n  render() {\n    const {\n      original_title,\n      vote_average,\n      genres,\n      release_date,\n      overview,\n      poster_path,\n      loading,\n    } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <Button\n          className={styles.button}\n          type=\"button\"\n          onClick={this.handleGoBack}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          Go back\n        </Button>\n        {loading && <Spinner />}\n        <div className={styles.card}>\n          {poster_path ? (\n            <img\n              width=\"300\"\n              height=\"450\"\n              src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n              alt={`${original_title}`}\n            />\n          ) : (\n            <img\n              width=\"300\"\n              height=\"450\"\n              src={\"https://i.imgflip.com/s3joj.jpg\"}\n              alt={`${original_title}`}\n            />\n          )}\n\n          <div className={styles.description}>\n            <h1>{original_title}</h1>\n            <p>{vote_average && `User rate: ${vote_average * 10} %`}</p>\n            <p>{release_date && `Release Year: ${release_date.slice(0, 4)}`}</p>\n            <h2>\n              Genre:{\" \"}\n              <ul>\n                {genres && genres.map((el) => <li key={el.id}>{el.name}</li>)}\n              </ul>\n            </h2>\n            <p>{overview}</p>\n          </div>\n        </div>\n        <ul className={styles.list}>\n          <li className={styles.list__item}>\n            <Link\n              to={{\n                pathname: `${this.props.match.url}/cast`,\n                state: { from: this.state.queryHistory },\n              }}\n            >\n              Casts\n            </Link>\n          </li>\n          <li className={styles.list__item}>\n            <Link\n              to={{\n                pathname: `${this.props.match.url}/reviews`,\n                state: { from: this.state.queryHistory },\n              }}\n            >\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Route path={`${this.props.match.path}/cast`} component={Cast} />\n        <Route path={`${this.props.match.path}/reviews`} component={Reviews} />\n      </div>\n    );\n  }\n}\nexport default OverView;\n","import axios from \"axios\";\nconst apiKey = \"add96bc16de760017b7a79136a2ecf18\";\n\nexport const fetchMovieSearch = async (query) => {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const fetchPopularMovies = axios.get(\n  `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=1`\n);\n\nexport const fetchMoiveOverview =id => {\n   return axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\n      )\n      .then((res) => res.data);\n      \n}\n\nexport const fetchMovieCast = id => {\n    return axios\n      .get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`)\n      .then((res) => res.data.cast);\n}\n\nexport const fetchMovieReviews = id => {\n    return axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKey}`\n    ).then((res) => res.data.results)\n}","import React, { Component,} from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"./loader.module.css\";\nclass Spinner extends Component {\n  //other logic\n  render() {\n    return (\n      <>\n      <Loader\n        classname=\"loader\"\n        type=\"TailSpin\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        />\n        </>\n    );\n  }\n}\nexport default Spinner","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__3YnrM\"};"],"sourceRoot":""}