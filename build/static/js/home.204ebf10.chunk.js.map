{"version":3,"sources":["views/Home/home.module.css","views/Home/Home.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/regenerator-runtime/runtime.js"],"names":["module","exports","HomeView","state","movies","axios","get","response","this","setState","data","results","console","log","className","styles","title","list","map","id","list__item","key","link","to","pathname","from","props","location","Component","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","method","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"static/js/home.204ebf10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"home_list__3oRvm\",\"list__item\":\"home_list__item__3QOeL\",\"link\":\"home_link__3p5Ms\",\"title\":\"home_title__1SU0y\"};","import React, { Component } from 'react'\nimport axios from \"axios\";\nimport styles from \"./home.module.css\"\nimport { Route, Link, Switch} from \"react-router-dom\"\n\nclass HomeView extends Component {\n  state = {\n   movies: [],\n  };\n\n  async componentDidMount() {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=add96bc16de760017b7a79136a2ecf18`\n    );\n    this.setState({ movies: response.data.results });\n    console.log(this.state)\n  }\n\n  render() {\n    const { movies } = this.state;\n \n    return (\n      <div>\n        <h1 className={styles.title}>Популярные фильмы</h1>\n        <ul className={styles.list}>\n          {movies.map(({ id, title }) => (\n            <li  className={styles.list__item} key={id}>\n              <Link\n                className={styles.link}\n                to={{\n                  pathname: `/movies/${id}`,\n                  state: { from: this.props.location },\n                }}\n              >\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default  HomeView","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}